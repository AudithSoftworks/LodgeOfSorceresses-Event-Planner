branches:
  only:
    - master

dist: bionic
language: php
php: 7.4
services:
  - docker

stages:
  - build
  - test
  - deploy

ssh_agent: &ssh_agent
  - openssl aes-256-cbc -K $encrypted_7ee790fc7c4a_key -iv $encrypted_7ee790fc7c4a_iv -in deploy_rsa.enc -out /tmp/deploy_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_rsa
  - ssh-add /tmp/deploy_rsa

download_and_extract_cypress_binaries_cache: &download_and_extract_cypress_binaries_cache
  - scp -po StrictHostKeyChecking=no lodgeofsorceresses@artifacts.lodgeofsorceresses.com:/home/lodgeofsorceresses/artifacts/$TRAVIS_BUILD_NUMBER/cypress_binaries.tar.gz ../cypress_binaries.tar.gz
  - test -d ~/.cache/Cypress || mkdir -p ~/.cache/Cypress
  - ls -l ../cypress_binaries.tar.gz && tar -xzf ../cypress_binaries.tar.gz -C ~/.cache/Cypress

upload_cypress_binaries_cache: &upload_cypress_binaries_cache
  - cd ~/.cache && tar -cazf cypress_binaries.tar.gz -C ~/.cache/Cypress . && ls -l cypress_binaries.tar.gz && cd $OLDPWD
  - ssh -o StrictHostKeyChecking=no lodgeofsorceresses@artifacts.lodgeofsorceresses.com "mkdir -p ~/artifacts/$TRAVIS_BUILD_NUMBER/"
  - scp -po StrictHostKeyChecking=no ~/.cache/cypress_binaries.tar.gz lodgeofsorceresses@artifacts.lodgeofsorceresses.com:/home/lodgeofsorceresses/artifacts/$TRAVIS_BUILD_NUMBER/cypress_binaries.tar.gz

download_and_extract_artifact: &download_and_extract_artifact
  - scp -po StrictHostKeyChecking=no lodgeofsorceresses@artifacts.lodgeofsorceresses.com:/home/lodgeofsorceresses/artifacts/$TRAVIS_BUILD_NUMBER/artifact.tar.gz ../artifact.tar.gz
  - ls -l ../artifact.tar.gz
  - tar -xzf ../artifact.tar.gz .

upload_artifact: &upload_artifact
  - cd .. && tar -cazf artifact.tar.gz -C $OLDPWD . && ls -l artifact.tar.gz && cd $OLDPWD
  - ssh -o StrictHostKeyChecking=no lodgeofsorceresses@artifacts.lodgeofsorceresses.com "mkdir -p ~/artifacts/$TRAVIS_BUILD_NUMBER/"
  - scp -po StrictHostKeyChecking=no ../artifact.tar.gz lodgeofsorceresses@artifacts.lodgeofsorceresses.com:/home/lodgeofsorceresses/artifacts/$TRAVIS_BUILD_NUMBER/artifact.tar.gz

setup_env: &setup_env
  - chmod -R 0777 ./storage/logs ./storage/framework/views
  - export PR=https://api.github.com/repos/$TRAVIS_REPO_SLUG/pulls/$TRAVIS_PULL_REQUEST
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo `curl -s $PR | jq -r .head.ref`; fi)
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"
  - export MYUID=$(id -u) MYGID=$(id -g)
  - cp docker-compose.ci.yml docker-compose.override.yml
  - docker-compose pull && docker-compose up -d && docker-compose logs php && docker-compose ps
  - echo $(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' nginx) planner.lodgeofsorceresses.test | sudo tee -a /etc/hosts
  - docker-compose exec php bash -c "
      crontab -l;
      sudo chown -R audith:audith ./;
      mkdir -p ~/.ssh && touch ~/.ssh/known_hosts && chmod 0600 ~/.ssh/known_hosts;
      ssh-keyscan -H github.com >> ~/.ssh/known_hosts;
    "

after_failure:
  - ssh -o StrictHostKeyChecking=no lodgeofsorceresses@artifacts.lodgeofsorceresses.com "rm -rf ~/artifacts/$TRAVIS_BUILD_NUMBER/"

jobs:
  fast_finish: true
  include:
    - stage: build
      name: 'Building back- & front-end artifacts'
      cache:
        npm: true
        directories:
          - ~/.cache/Cypress
          - ~/.cache/google-fonts
          - public/fonts
          - vendor
      before_script:
        - *setup_env
      script: ./storage/build/scripts/ci/build_backend.sh
      after_script:
        - *ssh_agent
        - *upload_artifact
        - *upload_cypress_binaries_cache
    - stage: test
      name: 'Frontend Tests - Firefox - Machine #1'
      cache: false
      before_script:
        - *ssh_agent
        - *download_and_extract_cypress_binaries_cache
        - *download_and_extract_artifact
        - *setup_env
      script: ./storage/build/scripts/ci/test_frontend.sh
      env:
        - BROWSER=firefox
    - stage: test
      name: 'Frontend Tests - Firefox - Machine #2'
      cache: false
      before_script:
        - *ssh_agent
        - *download_and_extract_cypress_binaries_cache
        - *download_and_extract_artifact
        - *setup_env
      script: ./storage/build/scripts/ci/test_frontend.sh
      env:
        - BROWSER=firefox
    - stage: test
      name: 'Frontend Tests - Firefox - Machine #3'
      cache: false
      before_script:
        - *ssh_agent
        - *download_and_extract_cypress_binaries_cache
        - *download_and_extract_artifact
        - *setup_env
      script: ./storage/build/scripts/ci/test_frontend.sh
      env:
        - BROWSER=firefox
    - stage: test
      name: 'Frontend Tests - Chrome - Machine #1'
      cache: false
      before_script:
        - *ssh_agent
        - *download_and_extract_cypress_binaries_cache
        - *download_and_extract_artifact
        - *setup_env
      script: ./storage/build/scripts/ci/test_frontend.sh
      env:
        - BROWSER=chrome
    - stage: test
      name: 'Frontend Tests - Chrome - Machine #2'
      cache: false
      before_script:
        - *ssh_agent
        - *download_and_extract_cypress_binaries_cache
        - *download_and_extract_artifact
        - *setup_env
      script: ./storage/build/scripts/ci/test_frontend.sh
      env:
        - BROWSER=chrome
    - stage: test
      name: 'Frontend Tests - Chrome - Machine #3'
      cache: false
      before_script:
        - *ssh_agent
        - *download_and_extract_cypress_binaries_cache
        - *download_and_extract_artifact
        - *setup_env
      script: ./storage/build/scripts/ci/test_frontend.sh
      env:
        - BROWSER=chrome
    - stage: test
      name: 'Backend Tests - MariaDb'
      cache: false
      before_script:
        - *ssh_agent
        - *download_and_extract_artifact
        - *setup_env
      script: ./storage/build/scripts/ci/test_backend.sh
      env:
        - DB_CONNECTION=mysql
        - DB_HOST=mariadb
        - DB_USERNAME=root
    - stage: test
      name: 'Backend Tests - PgSQL'
      cache: false
      before_script:
        - *ssh_agent
        - *download_and_extract_artifact
        - *setup_env
      script: ./storage/build/scripts/ci/test_backend.sh
      env:
        - DB_CONNECTION=pgsql
        - DB_HOST=postgres
        - DB_USERNAME=postgres
    - stage: test
      name: 'Deploy - Phase 1'
      cache: false
      before_script:
        - *ssh_agent
        - *download_and_extract_artifact
      script: ./storage/build/scripts/ci/deploy.sh
      after_failure:
        - ssh -o StrictHostKeyChecking=no lodgeofsorceresses@artifacts.lodgeofsorceresses.com "rm -rf ~/artifacts/$TRAVIS_BUILD_NUMBER/"
        - ssh -o StrictHostKeyChecking=no lodgeofsorceresses@lodgeofsorceresses.com "rm -rf ~/subdomains/planner/${$TRAVIS_BUILD_NUMBER}/"


#deploy:
#  - provider: script
#    skip_cleanup: true
#    script: ./storage/build/scripts/ci/deploy.sh
#    on:
#      branch: master
#      condition: $DB_CONNECTION == 'mysql' && $BRANCH == 'master'
#
#after_deploy:
#  - if [[ $DB_CONNECTION == 'mysql' && $BRANCH == 'master' ]]; then ssh lodgeofsorceresses@lodgeofsorceresses.com 'bash -s' < ./storage/build/scripts/ci/install.sh ${TRAVIS_BUILD_NUMBER}; fi
